# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}

type DeleteAccountPayload {
	count: Int
	errors: [ErrorPayload]
}

type DeleteDevicePayload {
	count: Int
	errors: [ErrorPayload]
}

type DeleteSchedulePayload {
	count: Int
	errors: [ErrorPayload]
}

type Device {
	active: Boolean!
	createdAt: Date!
	id: ID!
	name: String!
	schedules(
		after: String
		before: String
		filterBy: JSONObject
		first: Int
		last: Int
		orderBy: String
		q: String
	): SchedulesConnection
	updatedAt: Date!
	user: User
	verified: Boolean!
	version: Int!
}

type DeviceEdge {
	cursor: String!
	node: Device!
}

type DevicePayload {
	device: Device
	errors: [ErrorPayload]
}

type DevicesConnection {
	edges: [DeviceEdge!]!
	pageInfo: PageInfo!
	totalCount: Int!
}

type ErrorPayload {
	field: String
	message: [String]
}

type Mutation {
	createDevice(data: CreateDeviceInput!): DevicePayload!
	createSchedule(data: CreateScheduleInput!): SchedulePayload!
	deleteAccount: DeleteAccountPayload!
	deleteDevice(id: ID!): DeleteDevicePayload!
	deleteSchedule(id: ID!): DeleteSchedulePayload!
	login(data: LoginUserInput!): UserPayload!
	logout: Boolean!
	refreshToken: UserPayload!
	signup(data: SignupUserInput!): UserPayload!
	updateDevice(data: UpdateDeviceInput!, id: ID!): DevicePayload!
	updateEmail(data: UpdateEmailInput): UserPayload!
	updatePassword(data: UpdatePasswordInput): UserPayload!
	updateProfile(data: UpdateProfileInput!): UserPayload!
	updateSchedule(data: UpdateScheduleInput!, id: ID!): SchedulePayload!
}

type PageInfo {
	endCursor: String!
	hasNextPage: Boolean!
	hasPreviousPage: Boolean!
	startCursor: String!
}

type Query {
	device(id: ID!): Device!
	deviceCount(filterBy: JSONObject, q: String): Int!
	devices(
		after: String
		before: String
		filterBy: JSONObject
		first: Int
		last: Int
		orderBy: String
		q: String
	): DevicesConnection
	getGoogleAuthURL: String!
	googleAuth(input: SocialAuthInput): UserPayload!
	me: User!
	myDevice(
		after: String
		before: String
		filterBy: JSONObject
		first: Int
		last: Int
		orderBy: String
		q: String
	): DevicesConnection
	schedule(id: ID!): Schedule!
	schedules(
		after: String
		before: String
		filterBy: JSONObject
		first: Int
		last: Int
		orderBy: String
		q: String
	): SchedulesConnection
	schedulesCount(filterBy: JSONObject, q: String): Int!
	user(id: ID!): User!
	userCount(filterBy: JSONObject, q: String): Int!
	users(
		after: String
		before: String
		filterBy: JSONObject
		first: Int
		last: Int
		orderBy: String
		q: String
	): UsersConnection
}

type Schedule {
	active: Boolean!
	createdAt: Date!
	device: Device!
	id: ID!
	schedule: String!
	updatedAt: Date!
	version: Int!
}

type ScheduleEdge {
	cursor: String!
	node: Schedule!
}

type SchedulePayload {
	errors: [ErrorPayload]
	schedule: Schedule
}

type SchedulesConnection {
	edges: [ScheduleEdge!]!
	pageInfo: PageInfo!
	totalCount: Int!
}

type Subscription {
	deviceAdded: Device!
	scheduleAdded: Device!
}

type User {
	active: Boolean!
	avatar: String!
	createdAt: Date!
	devices(
		after: String
		before: String
		filterBy: JSONObject
		first: Int
		last: Int
		orderBy: String
		q: String
	): DevicesConnection
	email: EmailAddress!
	firstName: String!
	googleId: String!
	id: ID!
	lastName: String!
	password: String!
	role: Roles!
	updatedAt: Date!
	verified: Boolean!
	version: Int!
}

type UserEdge {
	cursor: String!
	node: User!
}

type UserPayload {
	errors: [ErrorPayload]
	user: User
}

type UsersConnection {
	edges: [UserEdge!]!
	pageInfo: PageInfo!
	totalCount: Int!
}

enum Roles {
	ADMIN
	DEVELOPER
	USER
}

"Date custom scalar type"
scalar Date

"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime

"A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/."
scalar EmailAddress

"The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSONObject

"Integers that will have a value of 0 or more."
scalar UnsignedInt

input CreateDeviceInput {
	name: String!
}

input CreateScheduleInput {
	device: String!
	schedule: String!
}

input LoginUserInput {
	email: EmailAddress!
	password: String!
}

input SignupUserInput {
	email: EmailAddress!
	firstName: String!
	lastName: String!
	password: String!
}

input SocialAuthInput {
	code: String!
}

input UpdateDeviceInput {
	active: Boolean
	name: String
	user: String
	verified: Boolean
}

input UpdateEmailInput {
	currentPassword: String!
	email: EmailAddress!
}

input UpdatePasswordInput {
	confirmPassword: String!
	currentPassword: String!
	newPassword: String!
}

input UpdateProfileInput {
	active: Boolean
	avatar: String
	email: EmailAddress
	firstName: String
	lastName: String
	verified: Boolean
}

input UpdateScheduleInput {
	active: Boolean
	schedule: String
}
